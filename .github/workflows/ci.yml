name: CI

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize]

env:
  STORAGE_PATH: storage
  NEXT_PUBLIC_BACKEND_URL: http://127.0.0.1:3001/api
  NEXT_PUBLIC_FRONTEND_URL: https://127.0.0.1:3000
  DOCKER_COMPOSE_FILE: jeteo/.docker/docker-compose.ci.yaml

jobs:
  setup-database:
    name: Setup Database
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Docker Compose
        run: sudo docker-compose -f $DOCKER_COMPOSE_FILE up -d

  run-app:
    name: Run App
    runs-on: ubuntu-latest

    needs: setup-database

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install

      - name: Generate Schema
        run: cd apps/api && npm run generate && cd ../../

      - name: Run App
        run: npm run dev &

  test:
    name: Test
    runs-on: ubuntu-latest

    needs: run-app

    steps:
      - name: Wait for App to Start
        run: sleep 10  # Adjust the sleep duration based on your app's startup time

      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm run test

      - name: Tear down Docker Compose
        run: sudo docker-compose -f $DOCKER_COMPOSE_FILE down

  build:
    name: Build
    timeout-minutes: 15
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm install

      - name: Generate Schema
        run: cd apps/api && npm run generate && cd ../../

      - name: Build
        run: npm run build
